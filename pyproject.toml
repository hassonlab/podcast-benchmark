[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "podcast-benchmark"
version = "0.1.0"
description = "ECoG decoding benchmark for podcast data"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "Zach Paris", email = "zparis99@gmail.com"}
]

# Core dependencies required to run the package
dependencies = [
    # Core scientific computing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.12.0",
    "scikit-learn>=1.5.0",

    # Deep learning (PyTorch)
    "torch>=2.0.0",

    # Neuroscience data handling
    "mne==1.9.0",
    "mne-bids==0.16.0",

    # NLP and embeddings
    "gensim==4.3.3",
    "nltk==3.9.1",

    # Data I/O
    "h5py==3.13.0",
    "PyYAML==6.0.2",

    # Visualization
    "matplotlib==3.10.1",

    # Utilities
    "tqdm==4.67.1",
]

[project.optional-dependencies]
# Minimal test dependencies
test = [
    "pytest==8.3.4",
    "pytest-mock==3.12.0",
]

# TensorBoard for training visualization (optional)
tensorboard = [
    "tensorboard>=2.15.0",
]

# GPU support for PyTorch
gpu = [
    "nvidia-cublas-cu12==12.4.5.8",
    "nvidia-cuda-cupti-cu12==12.4.127",
    "nvidia-cuda-nvrtc-cu12==12.4.127",
    "nvidia-cuda-runtime-cu12==12.4.127",
    "nvidia-cudnn-cu12==9.1.0.70",
    "nvidia-cufft-cu12==11.2.1.3",
    "nvidia-curand-cu12==10.3.5.147",
    "nvidia-cusolver-cu12==11.6.1.9",
    "nvidia-cusparse-cu12==12.3.1.170",
    "nvidia-cusparselt-cu12==0.6.2",
    "nvidia-nccl-cu12==2.21.5",
    "nvidia-nvjitlink-cu12==12.4.127",
    "nvidia-nvtx-cu12==12.4.127",
    "triton>=3.0.0",
]

# Development environment (tests + tensorboard)
dev = [
    "podcast-benchmark[test,tensorboard]",
]

# Full installation with all optional features
all = [
    "podcast-benchmark[test,tensorboard,gpu]",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "data*", "logs*", "*_env*"]