model_constructor_name: volume_level_ridge
task_name: volume_level_encoding_task
trial_name: volume_level_ridge
output_dir: results
model_dir: models
tensorboard_dir: event_logs

data_params:
  data_root: data
  subject_ids: [1, 2, 3, 4, 5, 6, 7, 8, 9]
  channel_reg_ex: null
  window_width: -1
  task_params:
    audio_path: stimuli/podcast.wav
    target_sr: 512
    cutoff_hz: 8.0
    butter_order: 4
    zero_phase: true
    allow_resample_audio: true
    window_size: 200.0
    hop_size: 25.0

training_params:
  min_lag: -1000
  max_lag: 1010
  lag_step_size: 10
  lag: null
  batch_size: 1
  epochs: 1
  n_folds: 1

model_params:
  alphas: null
  cv_splits: 10
  device: null
  verbose: true
  output_csv: ridge_summary.csv
  plot: false
  save_plot_path: ridge_plot.png
  analysis_modes:
    - pooled_electrodes
    - per_subject
    - average
  neural_log_compress: true
  neural_log_eps_scale: 0.000001
  allow_neural_resample: false
  drop_last_neural_channel: true
  # Uncomment the following lines to load precomputed neural features instead of MNE Raw objects.
  # precomputed_neural_path: data/precomputed/highgamma_features  # directory or .npz file
  # precomputed_neural_array_key: neural  # optional hint for array datasets within npz files
  # precomputed_neural_sr_key: sampling_rate  # optional hint for sampling rate datasets
  # precomputed_sampling_rate: 512  # fallback when sampling rate is not stored alongside the array

notes: |
  This configuration assumes preprocessed high-gamma data sampled at 512 Hz
  and a mono podcast waveform stored under data/stimuli/podcast.wav.
  The ecogprep derivatives already include Hilbert-transformed high-gamma
  amplitudes at a uniform sampling rate, so neural resampling is disabled by
  default. Enable `allow_neural_resample` only if you intentionally depart
  from the ecogprep preprocessing pipeline.
